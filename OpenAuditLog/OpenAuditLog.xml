<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenAuditLog</name>
    </assembly>
    <members>
        <member name="T:OpenAuditLog.AuditLog">
            <summary>
            OpenAuditLog.
            </summary>
        </member>
        <member name="P:OpenAuditLog.AuditLog.Logger">
            <summary>
            Method to invoke to send log messages.
            </summary>
        </member>
        <member name="P:OpenAuditLog.AuditLog.IntervalMs">
            <summary>
            The interval, in milliseconds, with which OpenAuditLog will attempt to send events to configured targets.
            Default value is 5000ms.
            Minimum value is 1.
            </summary>
        </member>
        <member name="P:OpenAuditLog.AuditLog.BatchSize">
            <summary>
            The maximum number of events to retrieve and process in each interval.
            Default value is 100.
            Minimum value is 1.
            </summary>
        </member>
        <member name="P:OpenAuditLog.AuditLog.MaxAttempts">
            <summary>
            The maximum number of times to retry sending an event to a target.  
            Default value is 5.
            Minimum value is 1.
            </summary>
        </member>
        <member name="M:OpenAuditLog.AuditLog.#ctor(System.String)">
            <summary>
            Instantiate the object.
            </summary>
            <param name="filename">Sqlite database filename.</param>
        </member>
        <member name="M:OpenAuditLog.AuditLog.Dispose">
            <summary>
            Dispose of the object.
            </summary>
        </member>
        <member name="M:OpenAuditLog.AuditLog.AddTarget(OpenAuditLog.AuditLogTarget)">
            <summary>
            Add an event target.
            </summary>
            <param name="target">Target.</param>
        </member>
        <member name="M:OpenAuditLog.AuditLog.TargetExistsByName(System.String)">
            <summary>
            Check if a target exists by name.
            </summary>
            <param name="name">Name of the target.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:OpenAuditLog.AuditLog.TargetExistsByGuid(System.String)">
            <summary>
            Check if a target exists by GUID.
            </summary>
            <param name="guid">GUID of the target.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:OpenAuditLog.AuditLog.RemoveTarget(System.String)">
            <summary>
            Remove an event target.
            This will also delete any events destined to the specified target.
            </summary>
            <param name="guid">GUID of the target.</param>
        </member>
        <member name="M:OpenAuditLog.AuditLog.AddEvent(OpenAuditLog.AuditLogEntry,System.Collections.Generic.List{System.String},System.Nullable{System.Int32})">
            <summary>
            Add an event.
            </summary>
            <param name="entry">Audit log entry.</param>
            <param name="targetGuids">List of target GUIDs to which the event should be sent.  Leave null to send to all targets.</param>
            <param name="maxAttempts">The maximum number of attempts to make in sending this event.  Leave null to use the value from the 'Retries' property.</param>
        </member>
        <member name="M:OpenAuditLog.AuditLog.RemoveEvent(System.String,System.String)">
            <summary>
            Remove an event.
            </summary>
            <param name="guid">GUID of the event.</param>
            <param name="targetGuid">Target GUID from which to remove the event.  Leave null to remove event from all targets.</param>
        </member>
        <member name="T:OpenAuditLog.AuditLogEntry">
            <summary>
            Audit log entry.
            </summary>
        </member>
        <member name="P:OpenAuditLog.AuditLogEntry.Id">
            <summary>
            Database row ID.
            </summary>
        </member>
        <member name="P:OpenAuditLog.AuditLogEntry.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:OpenAuditLog.AuditLogEntry.TargetGUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:OpenAuditLog.AuditLogEntry.Identity">
            <summary>
            Identity of the originator of the request.
            </summary>
        </member>
        <member name="P:OpenAuditLog.AuditLogEntry.Source">
            <summary>
            Event source.
            </summary>
        </member>
        <member name="P:OpenAuditLog.AuditLogEntry.Target">
            <summary>
            Event target.
            </summary>
        </member>
        <member name="P:OpenAuditLog.AuditLogEntry.Resource">
            <summary>
            Resource on the target with which the source was attempting to interact.
            </summary>
        </member>
        <member name="P:OpenAuditLog.AuditLogEntry.Handle">
            <summary>
            The handle of the resource.
            </summary>
        </member>
        <member name="P:OpenAuditLog.AuditLogEntry.Type">
            <summary>
            Type of event.
            </summary>
        </member>
        <member name="P:OpenAuditLog.AuditLogEntry.Result">
            <summary>
            Indicates the result of the operation.
            </summary>
        </member>
        <member name="P:OpenAuditLog.AuditLogEntry.ContentLength">
            <summary>
            Amount of data involved in the event.
            </summary>
        </member>
        <member name="P:OpenAuditLog.AuditLogEntry.Metadata">
            <summary>
            User-supplied metadata.
            </summary>
        </member>
        <member name="P:OpenAuditLog.AuditLogEntry.Attempts">
            <summary>
            The number of attempts made to send this event.
            </summary>
        </member>
        <member name="P:OpenAuditLog.AuditLogEntry.MaxAttempts">
            <summary>
            The maximum number of attempts allowed to send this event.
            </summary>
        </member>
        <member name="P:OpenAuditLog.AuditLogEntry.CreatedUtc">
            <summary>
            Timestamp of the creation of the event.
            </summary>
        </member>
        <member name="M:OpenAuditLog.AuditLogEntry.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="M:OpenAuditLog.AuditLogEntry.#ctor(System.Object,System.String,System.String,System.String,System.String,System.String,System.String,OpenAuditLog.EventResult,System.Int64)">
            <summary>
            Instantiate the object.
            </summary>
            <param name="metadata">User-supplied metadata.</param>
            <param name="identity">Identity of the event originator.</param>
            <param name="source">Event source.</param>
            <param name="target">Event target.</param>
            <param name="resource">Resource on the target with which the source was attempting to interact.</param>
            <param name="handle">The handle of the resource.</param>
            <param name="eventType">Type of event.</param>
            <param name="eventResult">Result of the event.</param>
            <param name="contentLength">Amount of data involved in the event.</param>
        </member>
        <member name="M:OpenAuditLog.AuditLogEntry.ToJson(System.Boolean)">
            <summary>
            Create a JSON representation.
            </summary>
            <param name="pretty">Enable or disable pretty print.</param>
            <returns>JSON string.</returns>
        </member>
        <member name="T:OpenAuditLog.AuditLogTarget">
            <summary>
            Audit log target.
            </summary>
        </member>
        <member name="P:OpenAuditLog.AuditLogTarget.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:OpenAuditLog.AuditLogTarget.Name">
            <summary>
            Name of the target.
            </summary>
        </member>
        <member name="P:OpenAuditLog.AuditLogTarget.Action">
            <summary>
            Method to invoke to send the event to the target.  The method should return true if successful, and false if failed.
            </summary>
        </member>
        <member name="M:OpenAuditLog.AuditLogTarget.#ctor(System.String,System.Func{OpenAuditLog.AuditLogEntry,System.Boolean})">
            <summary>
            Instantiate the object.
            </summary>
            <param name="name">Name of the target.</param>
            <param name="action">Method to invoke to send the event to the target.  The method should return true if successful, and false if failed.</param>
        </member>
        <member name="M:OpenAuditLog.AuditLogTarget.#ctor(System.String,System.String,System.Func{OpenAuditLog.AuditLogEntry,System.Boolean})">
            <summary>
            Instantiate the object.
            </summary>
            <param name="guid">GUID.</param>
            <param name="name">Name of the target.</param>
            <param name="action">Method to invoke to send the event to the target.  The method should return true if successful, and false if failed.</param>
        </member>
        <member name="T:OpenAuditLog.Common">
            <summary>
            Commonly-used static methods.
            </summary>
        </member>
        <member name="T:OpenAuditLog.EventResult">
            <summary>
            The result of the event.
            </summary>
        </member>
        <member name="F:OpenAuditLog.EventResult.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:OpenAuditLog.EventResult.Success">
            <summary>
            Success.
            </summary>
        </member>
        <member name="F:OpenAuditLog.EventResult.Failure">
            <summary>
            Failure.
            </summary>
        </member>
        <member name="F:OpenAuditLog.EventResult.Denied">
            <summary>
            Denied.
            </summary>
        </member>
    </members>
</doc>
